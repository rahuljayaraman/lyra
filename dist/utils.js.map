{"version":3,"sources":["../src/utils.ts"],"sourcesContent":["import type { TokenScore } from \"./types.js\";\n\nconst baseId = Date.now().toString().slice(5);\nlet lastId = 0;\n\nconst k = 1024;\nconst nano = BigInt(1e3);\nconst milli = BigInt(1e6);\nconst second = BigInt(1e9);\n\nexport const isServer = typeof window === \"undefined\";\n\nexport function formatBytes(bytes: number, decimals = 2): string {\n  if (bytes === 0) {\n    return \"0 Bytes\";\n  }\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n}\n\nexport function formatNanoseconds(value: number | bigint): string {\n  if (typeof value === \"number\") {\n    value = BigInt(value);\n  }\n\n  if (value < nano) {\n    return `${value}ns`;\n  } else if (value < milli) {\n    return `${value / nano}Î¼s`;\n  } else if (value < second) {\n    return `${value / milli}ms`;\n  }\n\n  return `${value / second}s`;\n}\n\nexport function getNanosecondsTime(): bigint {\n  if (typeof process !== \"undefined\" && process.hrtime !== undefined) {\n    return process.hrtime.bigint();\n  }\n\n  if (typeof performance !== \"undefined\") {\n    return BigInt(Math.floor(performance.now() * 1e6));\n  }\n\n  // @todo: fallback to V8 native method to get microtime\n  return BigInt(0);\n}\n\nexport function uniqueId(): string {\n  return `${baseId}-${lastId++}`;\n}\n\nexport function getOwnProperty<T = unknown>(object: Record<string, T>, property: string): T | undefined {\n  // Checks if `hasOwn` method is defined avoiding errors with older Node.js versions\n  if (Object.hasOwn === undefined) {\n    return Object.prototype.hasOwnProperty.call(object, property) ? object[property] : undefined;\n  }\n\n  return Object.hasOwn(object, property) ? object[property] : undefined;\n}\n\nexport function getTokenFrequency(token: string, tokens: string[]): number {\n  let count = 0;\n\n  for (const t of tokens) {\n    if (t === token) {\n      count++;\n    }\n  }\n\n  return count;\n}\n\nexport function insertSortedValue(\n  arr: TokenScore[],\n  el: TokenScore,\n  compareFn = sortTokenScorePredicate,\n): TokenScore[] {\n  let low = 0;\n  let high = arr.length;\n  let mid;\n\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (compareFn(el, arr[mid]) < 0) {\n      high = mid;\n    } else {\n      low = mid + 1;\n    }\n  }\n\n  arr.splice(low, 0, el);\n\n  return arr;\n}\n\nexport function sortTokenScorePredicate(a: TokenScore, b: TokenScore): number {\n  return b[1] - a[1];\n}\n\nexport function getNested<T = unknown>(\n  obj: Record<string, any>,\n  path: string\n): T | undefined {\n  return path.split(\".\").reduce((o, p) => typeof o === \"object\" ? o[p] : undefined, obj) as T | undefined;\n}\n"],"names":["baseId","Date","now","toString","slice","lastId","k","nano","BigInt","milli","second","isServer","window","formatBytes","bytes","decimals","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatNanoseconds","value","getNanosecondsTime","process","hrtime","undefined","bigint","performance","uniqueId","getOwnProperty","object","property","Object","hasOwn","prototype","hasOwnProperty","call","getTokenFrequency","token","tokens","count","t","insertSortedValue","arr","el","compareFn","sortTokenScorePredicate","low","high","length","mid","splice","a","b","getNested","obj","path","split","reduce","o","p"],"mappings":"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"}